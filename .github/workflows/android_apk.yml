name: Android - APK ## name of the workflow

on:
  push:
    branches:
      - master

defaults:
  run:
    working-directory: ./packages/app

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest # using ubuntu latest version / or you can use a specific version

    steps:
      - name: Check out Git repository # checkout repository
        uses: actions/checkout@v2

      - name: Set up our JDK environment # setup JDK environment: mandatory as we need to build an android project
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Set up Node.js ## setup node and yarn with cache
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'yarn'

      - name: Install dependencies ## install project deps with --frozen-lockfile to make sure we will have the same packages version ( very recommended  on running yarn install on ci)
        run: yarn install --frozen-lockfile

      ## configure cash for gradle : will help to reduce build time
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      ## build APK
      - name: Build Android App Bundle
        run: |
          cd android && ./gradlew assembleRelease --no-daemon

        ## sign generate apk using github secrets
      - name: Sign App APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./packages/app/android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      ## upload artifact to action
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
